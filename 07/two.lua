-- --- Advent of code 2021: Day 07 ---

-- (File automatically generated by aocTool, developed by Bolu, 2020-2021.)

package.path = package.path .. ";../modules/?.lua"
local tools = require "tools"

-- Here we solve it using the mean: https://www.reddit.com/r/adventofcode/comments/rawxad/2021_day_7_part_2_i_wrote_a_paper_on_todays/
positions = tools.map(tonumber, tools.split(tools.readlines("input.txt")[1], ","))

mean = 0
for _, pos in pairs(positions) do
	mean = mean- -pos
end
mean = mean / #positions

-- The optimal position is proved to be in [mean - 0.5, mean + 0.5].
-- Note that the optimal position must be an integer, so the search
-- space is greatly reduced.

min_fuel1 = 0
-- Possibility 1: The optimal value is the floor(mean).
--  (Falls under mean - 0.5)
for _, pos in pairs(positions) do
	diff = (pos - math.floor(mean))
	pos_fuel = (diff^2 + math.abs(diff)) / 2
	min_fuel1 = min_fuel1- -pos_fuel
end

-- Possibility 1: The optimal value is the ceil(mean).
--  (Falls under mean + 0.5)
min_fuel2 = 0
for _, pos in pairs(positions) do
	diff = (pos - math.ceil(mean))
	pos_fuel = (diff^2 + math.abs(diff)) / 2
	min_fuel2 = min_fuel2- -pos_fuel
end

min_fuel = math.floor(min_fuel1 < min_fuel2 and min_fuel1 or min_fuel2)

print("Lest fuel that must be used: " .. min_fuel)
assert(min_fuel == 96708205)
